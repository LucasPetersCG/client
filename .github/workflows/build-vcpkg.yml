name: Build with vcpkg

on:
  push:
    branches:
      - master
      - v*
    tags:
      - v*

  pull_request:
    branches:
      - master
      - v*

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.cxx }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}
    runs-on: ${{ matrix.os }}-${{ matrix.os-version }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        name: [windows-msvc]
        buildtype: [Debug, Release]
        luajit: [on]
        include:
          - name: windows-msvc
            os: windows
            os-version: latest
            cxx: cl.exe
            cc: cl.exe
            triplet: x64-windows
            packages: >
              boost-iostreams boost-asio boost-system boost-variant boost-lockfree boost-filesystem boost-uuid
              glew luajit libogg libvorbis openal-soft opengl openssl physfs zlib

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Set Environment vars
        run: |
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV
          echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
          echo "VCPKG_FORCE_SYSTEM_BINARIES=1" >> $GITHUB_ENV

      - name: Cache vcpkg
        uses: actions/cache@v4
        id: vcpkg-cache
        continue-on-error: true
        with:
          path: ${{ github.workspace }}/vcpkg
          key: vcpkg-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-
          enableCrossOsArchive: true
          fail-on-cache-miss: false
          lookup-only: false

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v7
        continue-on-error: true
        with:
          vcpkgArguments: ${{ matrix.packages }}
          vcpkgDirectory: ${{ github.workspace }}/vcpkg/
          vcpkgTriplet: ${{ matrix.triplet }}
          vcpkgGitCommitId: 6f7ffeb18f99796233b958aaaf14ec7bd4fb64b2

      - name: Debug vcpkg output
        if: failure()
        run: |
          echo "Listing vcpkg directory contents:"
          ls -la ${{ github.workspace }}/vcpkg
          echo "Checking vcpkg logs:"
          cat ${{ github.workspace }}/vcpkg/buildtrees/*/install-*.log || true

      - name: Cache build
        uses: actions/cache@v4
        id: build-cache
        continue-on-error: true
        with:
          path: ${{ github.workspace }}/build
          key: build-${{ runner.os }}-${{ matrix.buildtype }}-${{ matrix.luajit }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            build-${{ runner.os }}-${{ matrix.buildtype }}-${{ matrix.luajit }}-
          enableCrossOsArchive: true
          fail-on-cache-miss: false
          lookup-only: false

      - name: Build with CMake
        uses: lukka/run-cmake@v3
        with:
          buildDirectory: ${{ github.workspace }}/build
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeAppendedArgs: '-G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.buildtype }}" -DLUAJIT="${{ matrix.luajit }}"'
          useVcpkgToolchainFile: true

      - name: Debug build output
        if: failure()
        run: |
          echo "Listing build directory contents:"
          ls -la ${{ github.workspace }}/build
          echo "Checking CMake logs:"
          cat ${{ github.workspace }}/build/CMakeFiles/CMakeError.log || true

      - name: Upload artifact binary (exe)
        uses: actions/upload-artifact@v4
        with:
          name: otclient-${{ matrix.name }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}-${{ github.sha }}
          path: ${{ github.workspace }}/build/otclient.exe

      - name: Upload artifact binary (dlls)
        uses: actions/upload-artifact@v4
        with:
          name: otclient-${{ matrix.name }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}-${{ github.sha }}
          path: ${{ github.workspace }}/build/*.dll
